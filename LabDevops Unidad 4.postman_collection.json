{
	"info": {
		"_postman_id": "de7f1cb7-4613-41b2-8fd1-3b93f10376e6",
		"name": "LabDevops Unidad 4",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GetUF",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var moment = require('moment');\r",
							"fecha = moment().format((\"DD-MM-YYYY\"));\r",
							"console.log (fecha);\r",
							"pm.environment.set(\"_FECHAHOY\", fecha);\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"bodyData = JSON.parse(responseBody)\r",
							"uf_value = Math.round(pm.response.json().serie[0].valor,);\r",
							"console.log(\"UF: \"+uf_value)\r",
							"pm.environment.set(\"_UF\", uf_value);\r",
							"\r",
							"pm.test(\"Tiempo de respuesta es menor que 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Respuesta estaria okay para procesar\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"pm.test(\"La respuesta contiene string UF\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"UF\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Codigo de estado 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://mindicador.cl/api/uf/{{_FECHAHOY}}",
					"protocol": "https",
					"host": [
						"mindicador",
						"cl"
					],
					"path": [
						"api",
						"uf",
						"{{_FECHAHOY}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "RetirarSaldo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retira total Ahorro\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.ahorro).to.eql(900000);\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Codigo de estado 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/rest/msdxc/dxc?ahorro=900000&sueldo=1000000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"rest",
						"msdxc",
						"dxc"
					],
					"query": [
						{
							"key": "ahorro",
							"value": "900000"
						},
						{
							"key": "sueldo",
							"value": "1000000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PuedeRetirar150UF",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retiro150UF\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.ahorro).to.eql(5000000);\r",
							"\r",
							"  valor_uf =pm.environment.get(\"_UF\");\r",
							"\r",
							"  pm.expect(responseJson.dxc).to.eql(150 * valor_uf );\r",
							"});\r",
							"\r",
							"pm.test(\"Codigo de estado 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/rest/msdxc/dxc?ahorro=5000000&sueldo=1000000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"rest",
						"msdxc",
						"dxc"
					],
					"query": [
						{
							"key": "ahorro",
							"value": "5000000"
						},
						{
							"key": "sueldo",
							"value": "1000000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Saldo Cero",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Saldo Cero\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.saldo).to.eql(0);\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Codigo de estado 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/rest/msdxc/dxc?ahorro=900000&sueldo=1000000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"rest",
						"msdxc",
						"dxc"
					],
					"query": [
						{
							"key": "ahorro",
							"value": "900000"
						},
						{
							"key": "sueldo",
							"value": "1000000"
						}
					]
				}
			},
			"response": []
		}
	]
}